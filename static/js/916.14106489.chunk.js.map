{"version":3,"file":"static/js/916.14106489.chunk.js","mappings":"wSAEMA,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAe,+NAIVC,EAAW,mCAAG,8FAAkBC,EAAAA,EAAAA,IAAU,iEAAkEN,GACpHO,OAAM,SAAUC,GAASC,IAAAA,OAAAA,QAAA,UAA2BD,EAAME,SAAY,IADhD,mFAAH,qDAGXC,EAAiB,mCAAG,WAAOC,EAAMC,GAAb,iFAA4BP,EAAAA,EAAAA,IAAA,0DAA6DM,EAA7D,oDAA6GC,GAAQb,GAC7KO,OAAM,SAAUC,GAASC,IAAAA,OAAAA,QAAA,UAA2BD,EAAME,SAAY,IAD1C,mFAAH,wDAGjBI,EAAY,mCAAG,WAAOC,GAAP,iFAAoBT,EAAAA,EAAAA,IAAA,6CAAgDS,EAAhD,mBAAqEf,GAChHO,OAAM,SAAUC,GAASC,IAAAA,OAAAA,QAAA,UAA2BD,EAAME,SAAY,IAD/C,mFAAH,sDAGZM,EAAY,mCAAG,WAAOD,EAAIE,GAAX,iFAA4BX,EAAAA,EAAAA,IAAA,6CAAgDS,EAAhD,YAAsDE,EAAtD,mBAA+EjB,GAClIO,OAAM,SAAUC,GAASC,IAAAA,OAAAA,QAAA,UAA2BD,EAAME,SAAY,IAD/C,mFAAH,uD,kFClBzB,EAA0B,4BAA1B,EAAkE,8B,SCkBlE,EAdmB,SAAC,GAAmB,IAAjBQ,EAAgB,EAAhBA,MAAOH,EAAS,EAATA,GACnBI,GAAWC,EAAAA,EAAAA,MACjB,OACI,eAAIC,UAAWC,EAAf,UACI,UAAC,KAAD,CAAMD,UAAWC,EAAeC,MAAOJ,EAAUK,GAAIT,EAArD,cAA4DG,MAGvE,C,sJCXD,EAAyB,uBAAzB,EAA6D,2BAA7D,EAAoG,0BAApG,EAA2I,2BAA3I,EAAkL,0B,SC6ClL,EAxCe,WACX,OAAwCO,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAmBA,OAZAC,EAAAA,EAAAA,YAAU,WACN,GAAIL,EAAaM,IAAb,KAAuB,CACvBC,QAAQC,IAAR,qBACA,IAAMC,EAAG,mCAAG,uGAC4BxB,EAAAA,EAAAA,IAAkB,GAAD,OAAIe,EAAaM,IAAb,MAAyB,GAD1E,gBACQI,EADR,EACAC,KAAQD,QAChBN,GAAa,OAAIM,IAFT,2CAAH,qDAKTD,GACH,CACJ,GAAE,CAACT,KAGA,iBAAKL,UAAWC,EAAhB,WACI,kBAAMD,UAAWC,EAAgBgB,SApBnB,SAACC,GACnBA,EAAEC,iBACF,IAAQC,EAAUF,EAAEG,OAAO,GAAnBD,MACRd,EAAgB,CAAEgB,EAAGF,GACxB,EAgBO,WACI,kBACIG,KAAK,OACLC,WAAS,EACTC,YAAY,gBACZzB,UAAWC,KACf,mBAAQD,UAAWC,EAAgBsB,KAAK,SAAxC,wBAEJ,eAAIvB,UAAWC,EAAf,SACKO,EAAUkB,OAASlB,EAAUmB,KAAI,gBAAG9B,EAAH,EAAGA,MAAOH,EAAV,EAAUA,GAAV,OAAmB,SAACkC,EAAA,EAAD,CAAqB/B,MAAOA,EAAOH,GAAE,UAAKA,IAAzBA,EAApC,IAC7BW,EAAaM,IAAb,MAAwB,yBAAI,cAAGX,UAAU,kBAAb,+BAA0D,OAK1G,C","sources":["API/api.js","webpack://react-homework-template/./src/components/moviesLink/MoviesLink.module.css?0d90","components/moviesLink/MoviesLink.jsx","webpack://react-homework-template/./src/components/pages/Movies/Movies.module.css?078c","components/pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\nconst options = {\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZmNkYTc5NGI1YzdhOWU5OTI1OThkNmQ1NTY1ODU5OCIsInN1YiI6IjY0NzExNzBmYmUyZDQ5MDEzM2EzOGE0MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jfZ3RR84pJADZLl4dkLKAprXQjhw6uOCeb899-OWaGU'\n    }\n};\n\nexport const getTrending = async () => await axios.get('https://api.themoviedb.org/3/trending/movie/day?language=en-US', options)\n    .catch(function (error) { Notiflix.Notify.failure(`${error.message}`) });\n\nexport const getSearchingMovie = async (find, page) => await axios.get(`https://api.themoviedb.org/3/search/movie?query=${find}&include_adult=false&language=en-US&page=${page}`, options)\n    .catch(function (error) { Notiflix.Notify.failure(`${error.message}`) });\n\nexport const getMovieById = async (id) => await axios.get(`https://api.themoviedb.org/3/movie/${id}?language=en-US`, options)\n    .catch(function (error) { Notiflix.Notify.failure(`${error.message}`) });\n\nexport const getMovieInfo = async (id, option) => await axios.get(`https://api.themoviedb.org/3/movie/${id}/${option}?language=en-US`, options)\n    .catch(function (error) { Notiflix.Notify.failure(`${error.message}`) });\n\n","// extracted by mini-css-extract-plugin\nexport default {\"linkItm\":\"MoviesLink_linkItm__0r6wZ\",\"movieLink\":\"MoviesLink_movieLink__OlmLl\"};","import React from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport css from './MoviesLink.module.css';\nimport propTypes from 'prop-types';\n\nconst MoviesLink = ({ title, id }) => {\n    const location = useLocation()\n    return (\n        <li className={css.linkItm}>\n            <Link className={css.movieLink} state={location} to={id} > {title}</Link >\n        </li>\n    )\n}\n\nMoviesLink.propTypes = {\n    title: propTypes.string.isRequired,\n    id: propTypes.string.isRequired\n}\n\nexport default MoviesLink","// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"Movies_movies__I+WGX\",\"searchForm\":\"Movies_searchForm__DOGDK\",\"formInput\":\"Movies_formInput__F5sGG\",\"formSubmit\":\"Movies_formSubmit__PigJq\",\"movieList\":\"Movies_movieList__mlHc9\"};","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchingMovie } from 'API/api';\nimport MoviesLink from 'components/moviesLink/MoviesLink';\nimport css from './Movies.module.css'\n\nconst Movies = () => {\n    const [searchParams, setsearchParams] = useSearchParams()\n    const [movieList, setmovieList] = useState([])\n    const submitHandler = (e) => {\n        e.preventDefault()\n        const { value } = e.target[0];\n        setsearchParams({ q: value })\n    }\n\n    useEffect(() => {\n        if (searchParams.get(`q`)) {\n            console.log(`render movie list`)\n            const api = async () => {\n                const { data: { results } } = await getSearchingMovie(`${searchParams.get(`q`)}`, 1)\n                setmovieList([...results])\n\n            };\n            api();\n        }\n    }, [searchParams])\n\n    return (\n        <div className={css.movies}>\n            <form className={css.searchForm} onSubmit={submitHandler}>\n                <input\n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Search movies\"\n                    className={css.formInput} />\n                <button className={css.formSubmit} type='submit'>Search</button>\n            </form>\n            <ul className={css.movieList}>\n                {movieList.length ? movieList.map(({ title, id }) => <MoviesLink key={id} title={title} id={`${id}`} />) :\n                    (searchParams.get(`q`) ? <li><p className=\"reviewsListName\">No movies found</p></li> : \"\")}\n            </ul>\n        </div>\n\n    )\n}\n\nexport default Movies"],"names":["options","method","headers","accept","Authorization","getTrending","axios","catch","error","Notiflix","message","getSearchingMovie","find","page","getMovieById","id","getMovieInfo","option","title","location","useLocation","className","css","state","to","useSearchParams","searchParams","setsearchParams","useState","movieList","setmovieList","useEffect","get","console","log","api","results","data","onSubmit","e","preventDefault","value","target","q","type","autoFocus","placeholder","length","map","MoviesLink"],"sourceRoot":""}