{"version":3,"file":"static/js/183.5bdcf988.chunk.js","mappings":"gUAEMA,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAe,+NAIVC,EAAW,mCAAG,8FAAkBC,EAAAA,EAAAA,IAAU,iEAAkEN,GACpHO,OAAM,SAAUC,GAASC,IAAAA,OAAAA,QAAA,UAA2BD,EAAME,SAAY,IADhD,mFAAH,qDAGXC,EAAiB,mCAAG,WAAOC,EAAMC,GAAb,iFAA4BP,EAAAA,EAAAA,IAAA,0DAA6DM,EAA7D,oDAA6GC,GAAQb,GAC7KO,OAAM,SAAUC,GAASC,IAAAA,OAAAA,QAAA,UAA2BD,EAAME,SAAY,IAD1C,mFAAH,wDAGjBI,EAAY,mCAAG,WAAOC,GAAP,iFAAoBT,EAAAA,EAAAA,IAAA,6CAAgDS,EAAhD,mBAAqEf,GAChHO,OAAM,SAAUC,GAASC,IAAAA,OAAAA,QAAA,UAA2BD,EAAME,SAAY,IAD/C,mFAAH,sDAGZM,EAAY,mCAAG,WAAOD,EAAIE,GAAX,iFAA4BX,EAAAA,EAAAA,IAAA,6CAAgDS,EAAhD,YAAsDE,EAAtD,mBAA+EjB,GAClIO,OAAM,SAAUC,GAASC,IAAAA,OAAAA,QAAA,UAA2BD,EAAME,SAAY,IAD/C,mFAAH,wDAGZQ,EAAW,mCAAG,WAAOH,GAAP,iFAAoBT,EAAAA,EAAAA,IAAA,6CAAgDS,EAAhD,iDAAmGf,GAC7IO,OAAM,SAAUC,GAASC,IAAAA,OAAAA,QAAA,UAA2BD,EAAME,SAAY,IADhD,mFAAH,qD,8ICrBxB,EAA2B,uBAA3B,EAAgE,0BAAhE,EAAwG,0BAAxG,EAAiJ,2BAAjJ,EAAgM,gC,SCiChM,EA3Ba,WACT,IAAQS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,IARAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAG,mCAAG,uGACyBT,EAAAA,EAAAA,IAAa,GAAD,OAAIG,GAAW,WADpD,gBACQG,EADR,EACAI,KAAQJ,KAChBC,GAAQ,OAAID,IAFJ,2CAAH,qDAITG,GACH,GAAE,CAACN,IAECG,EAEL,OACI,eAAIK,UAAWC,EAAf,gBACKN,QADL,IACKA,OADL,EACKA,EAAMO,KAAI,YAAkD,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,UAAWhB,EAA6B,EAA7BA,GAAkBiB,EAAW,EAAzBC,aACzBC,EAAUF,EAAI,yCAAqCA,GAlBrD,4JAmBJ,OAAO,gBAAIL,UAAWC,EAAf,WACH,gBAAKO,IAAKD,EAASE,IAAI,GAAGT,UAAWC,EAAiBS,MAAO,IAAKC,OAAQ,OAC1E,cAAGX,UAAWC,EAAd,SAAiCE,KACjC,eAAGH,UAAWC,EAAd,wBAAiDG,OAHThB,EAK/C,KAGZ,C","sources":["API/api.js","webpack://react-homework-template/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\nconst options = {\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZmNkYTc5NGI1YzdhOWU5OTI1OThkNmQ1NTY1ODU5OCIsInN1YiI6IjY0NzExNzBmYmUyZDQ5MDEzM2EzOGE0MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jfZ3RR84pJADZLl4dkLKAprXQjhw6uOCeb899-OWaGU'\n    }\n};\n\nexport const getTrending = async () => await axios.get('https://api.themoviedb.org/3/trending/movie/day?language=en-US', options)\n    .catch(function (error) { Notiflix.Notify.failure(`${error.message}`) });\n\nexport const getSearchingMovie = async (find, page) => await axios.get(`https://api.themoviedb.org/3/search/movie?query=${find}&include_adult=false&language=en-US&page=${page}`, options)\n    .catch(function (error) { Notiflix.Notify.failure(`${error.message}`) });\n\nexport const getMovieById = async (id) => await axios.get(`https://api.themoviedb.org/3/movie/${id}?language=en-US`, options)\n    .catch(function (error) { Notiflix.Notify.failure(`${error.message}`) });\n\nexport const getMovieInfo = async (id, option) => await axios.get(`https://api.themoviedb.org/3/movie/${id}/${option}?language=en-US`, options)\n    .catch(function (error) { Notiflix.Notify.failure(`${error.message}`) });\n\nexport const getMovieIMG = async (id) => await axios.get(`https://api.themoviedb.org/3/movie/${id}/images?include_image_language=en&language=en`, options)\n    .catch(function (error) { Notiflix.Notify.failure(`${error.message}`) });\n\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__1BYq+\",\"castListItm\":\"Cast_castListItm__1nrdF\",\"castListImg\":\"Cast_castListImg__Zwh3K\",\"castListName\":\"Cast_castListName__PVvP4\",\"castListCharacter\":\"Cast_castListCharacter__sk5rB\"};","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { getMovieInfo } from 'API/api';\nimport css from './Cast.module.css';\n\nconst defaultPicture = `https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg`;\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setcast] = useState(null)\n    useEffect(() => {\n        const api = async () => {\n            const { data: { cast } } = await getMovieInfo(`${movieId}`, 'credits')\n            setcast([...cast])\n        };\n        api();\n    }, [movieId])\n\n    if (!cast) return\n\n    return (\n        <ul className={css.castList}>\n            {cast?.map(({ name, character, id, profile_path: path }) => {\n                const fullUrl = path ? `https://image.tmdb.org/t/p/w500${path}` : defaultPicture;\n                return <li className={css.castListItm} key={id}>\n                    <img src={fullUrl} alt=\"\" className={css.castListImg} width={120} height={160} />\n                    <p className={css.castListName}>{name}</p>\n                    <p className={css.castListCharacter}>Character: {character}</p>\n                </li>\n            })}\n        </ul>\n    )\n}\n\nexport default Cast\n"],"names":["options","method","headers","accept","Authorization","getTrending","axios","catch","error","Notiflix","message","getSearchingMovie","find","page","getMovieById","id","getMovieInfo","option","getMovieIMG","movieId","useParams","useState","cast","setcast","useEffect","api","data","className","css","map","name","character","path","profile_path","fullUrl","src","alt","width","height"],"sourceRoot":""}